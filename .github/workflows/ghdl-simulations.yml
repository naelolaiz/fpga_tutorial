name: CI
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
jobs:
  ubuntu:
    strategy:
      fail-fast: false
      matrix:
        backend: [ '', mcode, llvm, gcc ]
        version: [ 20.04, latest ]
        #version: [ 18.04, 20.04, latest ] # TODO: put 18.04 back commenting screenshots generation on it
    runs-on: ubuntu-${{ matrix.version }}
    name: 'üêß Ubuntu ${{ matrix.version }} ¬∑ ${{ matrix.backend }}'
    steps:

    - name: 'üß∞ Checkout'
      uses: actions/checkout@v2

    - uses: ghdl/setup-ghdl-ci@nightly
      with: 
        backend: llvm
        
    - name: Install gtkwave and related tools for generating the simulation screenshots
      run: | 
        sudo apt-get install -y gtkwave scrot xvfb python-pil python3-pyvirtualdisplay
        pip3 install --user --upgrade setuptools wheel # ubuntu 18.04 apparently doesnt have proper setuptools
        pip3 install --user pillow pyscreenshot path
      # python3-pip 

        
    - name: testbench_sanity_check_expect_error
      id : sanity_check_test_expect_error
      continue-on-error: true
      run: |
        echo "GHDL_PREFIX: $GHDL_PREFIX"
        echo "GHDL: $GHDL"
        echo "GHDL_LIBS: $GHDL_LIBS"
        $GHDL --version
        cd src/3-testbench/sanity_check_tb
        $GHDL -a sanity_check_tb.vhd
        $GHDL -e sanity_check_tb
        ./sanity_check_tb --assert-level=error
    - name: Check sanity check result
      run: if [[ ${{ steps.sanity_check_test_expect_error.outcome }} == "failure" ]]; then exit 0; else exit 1; fi

    - name: testbench_styles_example
      run: |
        cd src/1-styles-vhdl
        $GHDL -a dataflow_example.vhd
        $GHDL -a structural_components.vhd
        $GHDL -a structural_example.vhd
        $GHDL -a behavioral_example.vhd
        $GHDL -a styles_example_tb.vhd
        $GHDL -e styles_example_tb
        $GHDL -r styles_example_tb --vcd=styles_example_tb.vcd
        python3 ../../scripts/gtkwave_export.py styles_example_tb.vcd
        mkdir  ../../out_screenshots
        mv gtkwave_id0.png ../../out_screenshots/styles-example_signals.png # TODO: rename output filename in script
        ./styles_example_tb --assert-level=error
    - name: testbench_testbench_example
      run: |
        cd src/3-testbench
        $GHDL -a toplevel_timer.vhd
        $GHDL -a toplevel_timer_tb.vhd
        $GHDL -e toplevel_timer_tb
        $GHDL -r toplevel_timer_tb --vcd=toplevel_timer_tb.vcd
        python3 ../../scripts/gtkwave_export.py toplevel_timer_tb.vcd
        mv gtkwave_id0.png ../../out_screenshots/testbench-example_signals.png # TODO: rename output filename in script
        ./toplevel_timer_tb --assert-level=error
    - uses: actions/upload-artifact@v3
      with:
        name: screenshots ${{ matrix.node-version }}
        path: ${{ github.workspace }}/out_screenshots/
